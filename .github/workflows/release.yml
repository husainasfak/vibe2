name: Build and Release Python CLI

on:
  push:
    tags:
      - 'v*' # Trigger workflow on tags matching v*

jobs:
  createrelease:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    name: Build Packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: |
              pyinstaller -F -n vibe vibe.py &&
              cd dist && zip vibe_mac.zip vibe
            OUT_FILE_NAME: vibe_mac.zip
            ASSET_MIME: application/zip

          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller -F -n vibe vibe.py
            OUT_FILE_NAME: vibe.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable

          - os: ubuntu-latest
            TARGET: linux
            CMD_BUILD: |
              pyinstaller -F -n vibe vibe.py &&
              cd dist && tar -czvf vibe_linux.tar.gz vibe
            OUT_FILE_NAME: vibe_linux.tar.gz
            ASSET_MIME: application/gzip

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip &&
          pip install -r requirements.txt &&
          pip install pyinstaller

      - name: Build Application for ${{ matrix.TARGET }}
        run: ${{ matrix.CMD_BUILD }}

      - name: Upload Release Asset to GitHub Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.createrelease.outputs.upload_url }}
          asset_path: ./dist/${{ matrix.OUT_FILE_NAME }}
          asset_name: ${{ matrix.OUT_FILE_NAME }}
          asset_content_type: ${{ matrix.ASSET_MIME }}