name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
            target: darwin_amd64
            suffix: ""
            ext: tar.gz
            cmd: tar -czvf

          - os: macos-latest
            target: darwin_arm64
            suffix: ""
            ext: tar.gz
            cmd: tar -czvf
            conda_subdir: osx-arm64

          - os: ubuntu-latest
            target: linux_amd64
            suffix: ""
            ext: tar.gz
            cmd: tar -czvf

          - os: ubuntu-latest
            target: linux_arm64
            suffix: ""
            ext: tar.gz
            cmd: tar -czvf
            conda_subdir: linux-arm64

          - os: windows-latest
            target: windows_amd64
            suffix: ".exe"
            ext: zip
            cmd: 7z a

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install pyinstaller build

      - name: Set cross-compilation for ARM64
        if: contains(matrix.target, 'arm64')
        shell: bash
        run: |
          echo "Setting up cross-compilation environment for ARM64"
          if [[ "${{ matrix.target }}" == *"darwin"* ]]; then
            echo "ARCHFLAGS=-arch arm64" >> $GITHUB_ENV
          fi

      - name: Build executable
        env:
          CONDA_SUBDIR: ${{ matrix.conda_subdir }}
        run: |
          pyinstaller -F -n vibe${{ matrix.suffix }} vibe.py

      - name: Package artifact
        run: |
          mkdir -p release
          cd dist
          ${{ matrix.cmd }} ../release/vibe_${GITHUB_REF_NAME}_${{ matrix.target }}.${{ matrix.ext }} vibe${{ matrix.suffix }}

      - name: Generate checksum (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          cd release
          shasum -a 256 vibe_${GITHUB_REF_NAME}_${{ matrix.target }}.${{ matrix.ext }} > checksums.txt

      - name: Generate checksum (Windows)
        if: runner.os == 'Windows'
        shell: powershell
        run: |
          cd release
          $file = "vibe_${env:GITHUB_REF_NAME}_${{ matrix.target }}.${{ matrix.ext }}"
          $hash = (Get-FileHash -Algorithm SHA256 $file).Hash.ToLower()
          "$hash  $file" | Out-File -Encoding utf8 checksums.txt

      - uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.target }}
          path: release/
          if-no-files-found: error

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Combine checksums
        run: |
          mkdir -p release
          cat artifacts/*/checksums.txt > release/checksums.txt

      - name: Copy release files
        run: |
          find artifacts -type f \( -name "*.tar.gz" -o -name "*.zip" \) -exec cp {} release/ \;

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/checksums.txt
            release/*.tar.gz
            release/*.zip
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}