name: Build and Release Python CLI

on:
  push:
    tags:
      - 'v*' # Trigger workflow on tags matching v*

jobs:
  build-and-release:
    name: Build and Release
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-12
            target: macos
            python_version: "3.10"
            out_file: vibe_mac.zip
            asset_mime: application/zip

          - os: windows-2022
            target: windows
            python_version: "3.10.11"
            out_file: vibe_win.zip
            asset_mime: application/zip

          - os: ubuntu-22.04
            target: linux
            python_version: "3.10"
            out_file: vibe_linux.tar.gz
            asset_mime: application/gzip

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pyinstaller

      - name: Build (macOS)
        if: matrix.os == 'macos-12'
        run: |
          pyinstaller -F -n vibe vibe.py
          cd dist && zip ../vibe_mac.zip vibe
        shell: bash

      - name: Build (Windows)
        if: matrix.os == 'windows-2022'
        run: |
          pyinstaller -F -n vibe vibe.py
          cd dist
          7z a ../vibe_win.zip vibe.exe
        shell: cmd

      - name: Build (Linux)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          pyinstaller -F -n vibe vibe.py
          cd dist && tar -czvf ../vibe_linux.tar.gz vibe
        shell: bash

      - name: Verify artifacts
        run: |
          ls -lah
          [ -f "${{ matrix.out_file }}" ] || exit 1
        shell: bash

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ matrix.out_file }}
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}